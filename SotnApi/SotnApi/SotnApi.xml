<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SotnApi</name>
    </assembly>
    <members>
        <member name="T:SotnApi.Constants.Values.Game.Enums.Character">
            <summary>Prologue Richter still counts as Alucard</summary>
        </member>
        <member name="M:SotnApi.EntityApi.FindAvailableEntitySlot(System.Boolean)">
            <summary>
            Scans memory for an empty entity slot.
            </summary>
            <returns>
            The address where the slot starts. Or 0 if a free slot was not found.
            </returns>
        </member>
        <member name="M:SotnApi.GameApi.SetLibraryCardDestination(System.UInt32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Room is an index that goes in increments of 8. Setting XY outside of the room will cause a large amount of delay before gaining control.
            </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WingsmashHorizontalSpeed">
            <summary> Wing Smash speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WalkingWholeSpeed">
            <summary> Alucard walking speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WalkingFractSpeed">
            <summary> Alucard walking fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.BackdashWholeSpeed">
            <summary> Alucard backdash whole speed in pixels per frame.. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingHorizontalWholeSpeed">
            <summary> Alucard jumping horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingHorizontalFractSpeed">
            <summary> Alucard jumping horizontal fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingAttackLeftHorizontalWholeSpeed">
            <summary> Alucard jumping horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingAttackLeftHorizontalFractSpeed">
            <summary> Alucard jumping horizontal fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingAttackRightHorizontalWholeSpeed">
            <summary> Alucard jumping horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingAttackRightHorizontalFractSpeed">
            <summary> Alucard jumping horizontal fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.FallingHorizontalWholeSpeed">
            <summary> Alucard falling horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.FallingHorizontalFractSpeed">
            <summary> Alucard falling horizontal fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WolfDashTopRightSpeed">
            <summary> Alucard standard wolf dash going left to right maximum speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WolfDashTopLeftSpeed">
            <summary> Alucard standard wolf dash going right to left maximum speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.BackdashDecel">
            <summary> Alucard backdash deceleration rate. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.RightHand">
            <summary> Index of the currently equipped item in the Right Hand slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.LeftHand">
            <summary> Index of the currently equipped item in the Left Hand slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Armor">
            <summary> Index of the currently equipped item in the Armor slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Helm">
            <summary> Index of the currently equipped item in the Helm slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Cloak">
            <summary> Index of the currently equipped item in the Cloak slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Accessory1">
            <summary> Index of the currently equipped item in the first Accessory slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Accessory2">
            <summary> Index of the currently equipped item in the second Accessory slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.HandCursor">
            <summary>Slot of the cursor in the hand equip menu.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.HelmCursor">
            <summary>Slot of the cursor in the helm equip menu.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.ArmorCursor">
            <summary>Slot of the cursor in the armor equip menu.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.CloakCursor">
            <summary>Slot of the cursor in the cloak equip menu.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.AccessoryCursor">
            <summary>Slot of the cursor in the accessory equip menu.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Subweapon">
            <summary> Index of the held subweapon.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.HorizontalVelocityWhole">
            <summary> Real-time horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.HorizontalVelocityFractional">
            <summary> Real-time horizontal fractional speed.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.ScreenX">
            <summary>Horizontal coordinate of Alucard on the screen.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.ScreenY">
            <summary>Vertical coordinate of Alucard on the screen.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.MapX">
            <summary>Horizontal position of the blinking indicator on the map.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.MapY">
            <summary>Vertical position of the blinking indicator on the map.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.FacingLeft">
            <returns> True if Alucard is facing left.</returns>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.ContactDamage">
            <summary>Damage dealt to enemies when Alucard touches them.</summary>
        </member>
        <member name="M:SotnApi.Interfaces.IAlucardApi.ClearInventory">
            <summary>
            Reduces the count of all items to 0.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IAlucardApi.GetSelectedItem">
            <returns>The item index at the cursor position in the equip submenu, or -1 if the item is not valid.</returns>
        </member>
        <member name="M:SotnApi.Interfaces.IAlucardApi.GetSelectedRelic">
            <returns>The relic at the cursor position in the relics submenu.</returns>
        </member>
        <member name="M:SotnApi.Interfaces.IAlucardApi.GrantItem(System.Int32)">
            <summary>
            Increases the count of held items of the type by one.
            </summary>
            <param name="index">Item index acording to the list at SotnApi.Constants.Values.Alucard.Equipment.Items</param>
        </member>
        <member name="M:SotnApi.Interfaces.IAlucardApi.GrantItemByName(System.String)">
            <summary>
            Increases the count of held items of the type by one.
            </summary>
            <param name="name">Item name acording to the list at SotnApi.Constants.Values.Alucard.Equipment.Items</param>
        </member>
        <member name="M:SotnApi.Interfaces.IAlucardApi.TakeOneItem(System.Int32)">
            <summary>
            Reduces the count of held items of the type by one.
            </summary>
            <param name="item">Item index acording to the list at SotnApi.Constants.Values.Alucard.Equipment.Items</param>
        </member>
        <member name="M:SotnApi.Interfaces.IAlucardApi.GrantRelic(SotnApi.Constants.Values.Alucard.Enums.Relic,System.Boolean)">
            <summary>
            Grants relic and turns it on it if is not a familiar card. Allow spawn will make the normal relics still spawn where they were supposed to.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IAlucardApi.TakeRelic(SotnApi.Constants.Values.Alucard.Enums.Relic)">
            <summary>
            Takes relic away.
            </summary>
        </member>
        <member name="T:SotnApi.Interfaces.IEntityApi">
            <summary>
            Spawns, finds and edits actor entities in memory.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.FindEntity(System.UInt16,System.Boolean)">
            <summary>
            Scans memory for an entity matching <paramref name="enemyId"/>.
            </summary>
            <returns>
            The address where the enemy entity starts. Or 0 if the enemy was not found.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.FindEntityFrom(System.Collections.Generic.List{System.UInt16},System.Boolean)">
            <summary>
            Scans memory for an entity matching <paramref name="enemyIds"/>.
            </summary>
            <returns>
            The address where the enemy entity starts. Or 0 if the enemy was not found.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.FindEntityFrom(System.Collections.Generic.List{SotnApi.Models.Entity},System.Boolean)">
            <summary>
            Scans memory for an entity matching EnemyId and ObjectId from <paramref name="entities"/>.
            </summary>
            <returns>
            The address where the enemy entity starts. Or 0 if the enemy was not found.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.GetAllEntities">
            <summary>
            Scans memory for all active entities.
            </summary>
            <returns>
            A list of addresses where the enemy entities start.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.GetAllEntities(System.Collections.Generic.List{System.UInt16})">
            <summary>
            Scans memory for all active entities matching <paramref name="enemyIds"/>.
            </summary>
            <returns>
            A list of addresses where the enemy entities start.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.GetEntity(System.Int64)">
            <returns>
            Byte range of the enemy entity.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.GetLiveEntity(System.Int64)">
            <returns>
            A LiveActor instance that can be used to edit the in-game entity.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.SpawnEntity(SotnApi.Models.Entity,System.Boolean)">
            <summary>
            Copies the actor data to memory. Spawning it in-game.
            </summary>
            <returns>
            The address, where the actor was spawned.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IEntityApi.FreeEntity(System.Int64)">
            <summary>
            Frees entity at address from memory.
            </summary>
        </member>
        <member name="T:SotnApi.Interfaces.IGameApi">
            <returns>
            Controls
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Status">
            <returns>
            The current Status of the game.
            </returns>
            <example>
            MainMenu
            </example>
            <example>
            InGame
            </example>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.CurrentMainMenuCategory">
            <returns>
            Returns the currently selected category in the menu.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.CurrentCharacter">
            <returns>
            The current character, but prologue Richter still counts as Alucard.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.ZoneTransitions">
            <returns>
            Zone transitions. Doesn't include cutscene and boss transitions.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Area">
            <returns>
            Index for the current area or subarea.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Room">
            <returns>
            Room for the current room or subroom.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Hours">
            <returns>
            Hours of in-game time.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Minutes">
            <returns>
            Minutes of in-game time.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Seconds">
            <returns>
            Seconds of in-game time.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Frames">
            <returns>
            Frames of in-game time.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.UnderwaterPhysicsEnabled">
            <summary>
            Gets or sets underwater physics state.
            </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.SecondCastle">
            <returns>
            True if the player is in the second castle. 
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.RoomX">
            <returns>
            X coordinate for the current highlighted room on the map.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.RoomY">
            <returns>
            Y coordinate for the current highlighted room on the map.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.CameraAdjustmentX">
            <returns>
            Shift for entity X positions based on how the camera moved.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.CameraAdjustmentY">
            <returns>
            Shift for entity Y positions based on how the camera moved.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.StageId">
            <returns>
            Current StageId.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.MapOpen">
            <returns>
            True of the map is open.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.IsLoading">
            <returns>
            True of the game is in the process of loading a new area.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.InTransition">
            <returns>
            True of the game is in the process of loading a new screen.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.MusicTrack">
            <returns>
            Index of the current music track. Would need to be frozen to get set.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.TrackVolume">
            <summary>
            Gets or sets the default volume for the current track.
            </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.MusicVolume">
            <summary>
            Gets or sets the current volume for XA music.
            </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.InputFlags">
            <summary>
            State of the buttons on the controller.
            </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.QcfInputCounter">
            <summary>
            Counter for the QCF input sequence
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.EquipMenuOpen">
            <summary>
            Checks if the item equip menu is currently open.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.RelicMenuOpen">
            <summary>
            Checks if the relic equip menu is currently open.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.CanMenu">
            <summary>
            Checks if it is currently possible for the player to access the menu.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetRoomToUnvisited(System.Int64)">
            <summary>
            Sets a room on the map to unvisited. Alucard can discover it again.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetRoomToVisited(System.Int64)">
            <summary>
            Sets a room on the map to visited. It will not reflect on the map unless a map reload occurs. Library cards and castle switches reload the map.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetRoomValue(System.Int64,System.Byte)">
            <summary>
            Sets the value for a room on the map. It will not reflect on the map unless a map reload occurs. Library cards and castle switches reload the map.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.GetTimeAttack(System.String)">
            <returns>
            The value of the time attack for the provided activity.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.InAlucardMode">
            <summary>
            Checks if the game is in Alucard mode.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.InPrologue">
            <summary>
            Checks if the game is the Prologue.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.CanWarp">
            <summary>
            Checks if the player is in a warp room.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.CanSave">
            <summary>
            Checks if the player is in a save room.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.IsInMenu">
            <summary>
            Checks if the menu si currently open.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetLibraryCardDestination(System.UInt32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Changes where the Library Card teleports the user to.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetMovementSpeedDirection(System.Boolean)">
            <summary>
            Flips or resets the direction in which Alucard walks or jumps.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.OverwriteString(System.Int64,System.String,System.Boolean)">
            <summary>
            Overwrites a string in the game.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.MuteXA">
            <summary>
            Mutes volume for all XA track playback without affecting load times.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.UnmuteXA">
            <summary>
            Unmutes volume for all XA track playback.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetStopwatchTimer(System.Byte)">
            <summary>
            Sets or resets the duration of a stopwatch cast.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.EnableStartWithStereo">
            <summary>
            Enables stereo when starting a new game.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.ReadPresetName">
            <summary>
            Reads the start menu string, where the  Randomizer preset is stored.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.ReadSeedName">
            <summary>
            Reads the start menu string, where the  Randomizer seed is stored.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.RespawnBosses">
            <summary>
            Enables all the bosses in the game, even if they have been defeated.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.RespawnItems">
            <summary>
            Respawns items on the map that have been previously collected.
            </summary>
        </member>
        <member name="T:SotnApi.Interfaces.IMapApi">
            <summary>
            Manipulates VRAM elements.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IMapApi.ColorMapRoom(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Colors a room on the map as a 3x3 square with borders.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IMapApi.ColorMapLocation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Colors a location on the map as a 2x2 square.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IMapApi.RoomIsRendered(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Checks if a room on the minimap is rendered.
            </summary>
        </member>
        <member name="T:SotnApi.Models.Entity">
            <summary>
            An object that can be rendered in-game or a live in-memory instance. Enemies, projectiles, items, hitboxes, interactable objects.
            </summary>
        </member>
    </members>
</doc>
