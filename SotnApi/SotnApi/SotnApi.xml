<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SotnApi</name>
    </assembly>
    <members>
        <member name="M:SotnApi.ActorApi.FindAvailableActorSlot">
            <summary>
            Scans memory for an empty actor slot.
            </summary>
            <returns>
            The address where the slot starts. Or 0 if a free slot was not found.
            </returns>
        </member>
        <member name="T:SotnApi.Constants.Values.Game.Enums.Character">
            <summary>Prologue Richter still counts as Alucard</summary>
        </member>
        <member name="T:SotnApi.Interfaces.IActorApi">
            <summary>
            Spawns, finds and edits actor entities in memory.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IActorApi.FindEnemy(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Scans memory for an enemy that matches the hp range specified.
            </summary>
            <param name="bannedHpValues">Exclude actors with these hp values.</param>
            <param name="minHp">Minimum allowed actor hp.</param>
            <param name="maxHp">Maximum allowed actor hp.</param>
            <returns>
            The address where the enemy entity starts. Or 0 if the enemy was not found.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IActorApi.FindEnemy(System.Int32,System.Int32,System.Collections.Generic.List{SotnApi.Models.SearchableActor})">
            <summary>
            Scans memory for an enemy that matches the hp range specified.
            </summary>
            <param name="bannedActors">Exclude actors with these values.</param>
            <param name="minHp">Minimum allowed actor hp.</param>
            <param name="maxHp">Maximum allowed actor hp.</param>
            <returns>
            The address where the enemy entity starts. Or 0 if the enemy was not found.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IActorApi.FindActorFrom(System.Collections.Generic.List{SotnApi.Models.SearchableActor})">
            <summary>
            Scans memory for an enemy from a list of accepted actor property values.
            </summary>
            <returns>
            The address where the enemy entity starts. Or 0 if the enemy was not found.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IActorApi.GetAllActors">
            <summary>
            Scans memory for all active actors.
            </summary>
            <returns>
            A list of addresses where the enemy entities start.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IActorApi.GetAllActors(System.Collections.Generic.List{SotnApi.Models.SearchableActor})">
            <summary>
            Scans memory for all active actors, that match the example actors.
            </summary>
            <returns>
            A list of addresses where the enemy entities start.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IActorApi.GetActor(System.Int64)">
            <returns>
            Byte range of the enemy entity.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IActorApi.GetLiveActor(System.Int64)">
            <returns>
            A LiveActor instance that can be used to edit the in-game entity.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IActorApi.SpawnActor(SotnApi.Models.Actor)">
            <summary>
            Copies the actor data to memory. Spawning it in-game.
            </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WingsmashHorizontalSpeed">
            <summary> Wing Smash speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WalkingWholeSpeed">
            <summary> Alucard walking speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WalkingFractSpeed">
            <summary> Alucard walking fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingHorizontalWholeSpeed">
            <summary> Alucard jumping horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingHorizontalFractSpeed">
            <summary> Alucard jumping horizontal fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingAttackLeftHorizontalWholeSpeed">
            <summary> Alucard jumping horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingAttackLeftHorizontalFractSpeed">
            <summary> Alucard jumping horizontal fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingAttackRightHorizontalWholeSpeed">
            <summary> Alucard jumping horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.JumpingAttackRightHorizontalFractSpeed">
            <summary> Alucard jumping horizontal fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.FallingHorizontalWholeSpeed">
            <summary> Alucard falling horizontal speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.FallingHorizontalFractSpeed">
            <summary> Alucard falling horizontal fractional speed. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WolfDashTopRightSpeed">
            <summary> Alucard standard wolf dash going left to right maximum speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.WolfDashTopLeftSpeed">
            <summary> Alucard standard wolf dash going right to left maximum speed in pixels per frame. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.BackdashDecel">
            <summary> Alucard backdash deceleration rate. </summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.RightHand">
            <summary> Index of the currently equipped item in the Right Hand slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.LeftHand">
            <summary> Index of the currently equipped item in the Left Hand slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Armor">
            <summary> Index of the currently equipped item in the Armor slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Helm">
            <summary> Index of the currently equipped item in the Helm slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Cloak">
            <summary> Index of the currently equipped item in the Cloak slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Accessory1">
            <summary> Index of the currently equipped item in the first Accessory slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Accessory2">
            <summary> Index of the currently equipped item in the second Accessory slot.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.Subweapon">
            <summary> Index of the held subweapon.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.ScreenX">
            <summary>Horizontal coordinate of Alucard on the screen.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.ScreenY">
            <summary>Vertical coordinate of Alucard on the screen.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.MapX">
            <summary>Horizontal position of the blinking indicator on the map.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.MapY">
            <summary>Vertical position of the blinking indicator on the map.</summary>
        </member>
        <member name="P:SotnApi.Interfaces.IAlucardApi.FacingLeft">
            <returns> True if Alucard is facing left.</returns>
        </member>
        <member name="T:SotnApi.Interfaces.IGameApi">
            <returns>
            Controls
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Status">
            <returns>
            The current Status of the game.
            </returns>
            <example>
            MainMenu
            </example>
            <example>
            InGame
            </example>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.CurrentMainMenuCategory">
            <returns>
            Returns the currently selected category in the menu.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.CurrentCharacter">
            <returns>
            The current character, but prologue Richter still counts as Alucard.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Area">
            <returns>
            Index for the current area or subarea.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Room">
            <returns>
            Room for the current room or subroom.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.SecondCastle">
            <returns>
            True if the player is in the second castle. 
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.MapXPos">
            <returns>
            X coordinate for the current highlighted room on the map.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.MapYPos">
            <returns>
            Y coordinate for the current highlighted room on the map.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Zone">
            <returns>
            Zone Byte1.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.Zone2">
            <returns>
            Zone Byte2.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.IsLoading">
            <returns>
            True of the game is in the process of loading a new area.
            </returns>
        </member>
        <member name="P:SotnApi.Interfaces.IGameApi.InTransition">
            <returns>
            True of the game is in the process of loading a new screen.
            </returns>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.EquipMenuOpen">
            <summary>
            Checks if the item equip menu is currently open.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.RelicMenuOpen">
            <summary>
            Checks if the relic equip menu is currently open.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.CanMenu">
            <summary>
            Checks if it is currently possible for the player to access the menu.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetRoomToUnvisited(System.Int64)">
            <summary>
            Sets a room on the map to unvisited. Alucard can discover it again.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetRoomToVisited(System.Int64)">
            <summary>
            Sets a room on the map to visited. It will not reflect on the map unless a map reload occurs. Library cards and castle switches reload the map.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.SetRoomValue(System.Int64,System.Byte)">
            <summary>
            Sets the value for a room on the map. It will not reflect on the map unless a map reload occurs. Library cards and castle switches reload the map.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.InAlucardMode">
            <summary>
            Checks if the game is in Alucard mode.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.InPrologue">
            <summary>
            Checks if the game is the Prologue.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.CanSave">
            <summary>
            Checks if the player is in a save room.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.IsInMenu">
            <summary>
            Checks if the menu si currently open.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.OverwriteString(System.Int64,System.String)">
            <summary>
            Overwrites a string in the game.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.ReadPresetName">
            <summary>
            Reads the start menu string, where the  Randomizer preset is stored.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.ReadSeedName">
            <summary>
            Reads the start menu string, where the  Randomizer seed is stored.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.RespawnBosses">
            <summary>
            Enables all the bosses in the game, even if they have been defeated.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IGameApi.RespawnItems">
            <summary>
            Respawns items on the map that have been previously collected.
            </summary>
        </member>
        <member name="T:SotnApi.Interfaces.IRenderingApi">
            <summary>
            Manipulates VRAM elements.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IRenderingApi.ColorMapRoom(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Colors a room on the map as a 3x3 square with borders.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IRenderingApi.ColorMapLocation(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Colors a location on the map as a 2x2 square.
            </summary>
        </member>
        <member name="M:SotnApi.Interfaces.IRenderingApi.RoomIsRendered(System.UInt32,System.UInt32)">
            <summary>
            Checks if a room on the minimap is rendered.
            </summary>
        </member>
        <member name="T:SotnApi.Models.Actor">
            <summary>
            An entity object that can be rendered in-game. Enemies, projectiles, items, hitboxes, interactable objects.
            </summary>
        </member>
        <member name="T:SotnApi.Models.LiveActor">
            <summary>
            A live entity object rendered in-game. Enemies, projectiles, items, hitboxes, interactable objects.
            </summary>
        </member>
    </members>
</doc>
